version: '3.8'

services:
  db:
    restart: always
    container_name: db
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB-orders}
      POSTGRES_USER: ${POSTGRES_USER-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-password}
    ports:
      - 5432:5432

  redis:
    image: redis:alpine
    container_name: redis

  django:
    restart: always
    container_name: django
    build:
      context: backend
    volumes:
      - ./backend:/app:cached
    environment:
      SQL_HOST: ${SQL_HOST-db}
      DB_REFRESH_INTERVAL: ${DB_REFRESH_INTERVAL-10}
      ORDERS_GOOGLESHEET_ID: ${ORDERS_GOOGLESHEET_ID-1AkbjncKtr9_xW3mFcpxX9E1FDoFyn0sAbomPFIUxmDo}
    entrypoint:
      - ./entrypoint.sh
    ports:
      - "8080:8000"
    depends_on:
      - db

  celery:
    container_name: celery
    build:
      context: backend
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app:cached
    environment:
      SECRET_KEY: ${SECRET_KEY-replace_me}
      SQL_HOST: ${SQL_HOST-db}
    depends_on:
      - redis
      - django

  celery-beat:
    container_name: celery-beat
    build:
      context: backend
    command: celery -A config beat -l info
    volumes:
      - ./backend:/app:cached
    environment:
      SECRET_KEY: ${SECRET_KEY-replace_me}
      SQL_HOST: ${SQL_HOST-db}
    depends_on:
      - redis
      - django

  frontend:
    container_name: frontend
    build:
      context: frontend
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
      REACT_APP_BACKEND_HOST: ${REACT_APP_BACKEND_HOST-http://localhost}
      REACT_APP_REFRESH_INTERVAL_DURATION: ${REACT_APP_REFRESH_INTERVAL_DURATION-10}
    command: npm start
    ports:
      - 3000:3000
    depends_on:
      - django

  tg-bot:
    container_name: telegram-bot
    build:
      context: bot
    volumes:
      - ./bot:/bot:cached
    command: python bot.py
    depends_on:
      - django

volumes:
  postgres_data: null
